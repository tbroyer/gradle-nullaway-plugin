name: CI

on:
  push:
    path-ignore:
      - '**/*.md'
  pull_request:
    path-ignore:
      - '**/*.md'

# First build on Linux with JDK 8
# Then run tests with various Gradle and JDKs versions
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Build with Gradle
        id: gradle-build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --scan build

      - name: Store reports
        if: steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: linux-reports
          path: build/reports/

  test-gradle:
    needs: linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gradle: [ '8.0.1', '7.6', '7.5.1', '7.4.2', '7.3.3', '7.2', '7.1.1', '7.0.2', '6.8.3', '6.7.1', '6.6.1', '6.5.1', '6.4.1', '6.3', '6.2.2', '6.1.1', '6.0.1', '5.6.4', '5.5.1', '5.4.1', '5.3.1', '5.2.1' ]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Build with Gradle
        id: gradle-build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --scan test "-Ptest.gradle-version=${{ matrix.gradle }}"

      - name: Store reports
        if: steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: gradle-${{ matrix.gradle }}-tests
          path: build/reports/tests/test/

  test-jdk:
    needs: linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 17 ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: |
            ${{ matrix.java }}
            8

      - name: Setup environment
        run: |
          echo "org.gradle.java.installations.auto-download=false" | tee -a gradle.properties
          echo "org.gradle.java.installations.fromEnv=JAVA_HOME_${{ matrix.java }}_X64" | tee -a gradle.properties

      - name: Build with Gradle
        id: gradle-build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --scan test "-Ptest.java-toolchain=${{ matrix.java }}"

      - name: Store reports
        if: steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: jdk-${{ matrix.java }}-tests
          path: build/reports/tests/test/

  test-jdk17-gradle7:
    needs: linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gradle: [ '7.5', '7.4.2', '7.3.3', '7.2' ]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: |
            17
            8

      - name: Setup environment
        run: |
          echo "org.gradle.java.installations.auto-download=false" | tee -a gradle.properties
          echo "org.gradle.java.installations.fromEnv=JAVA_HOME_17_X64" | tee -a gradle.properties

      - name: Build with Gradle
        id: gradle-build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --scan test -Ptest.java-toolchain=17 "-Ptest.gradle-version=${{ matrix.gradle }}"

      - name: Store reports
        if: always() && (steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure')
        uses: actions/upload-artifact@v3
        with:
          name: jdk17-gradle-${{ matrix.gradle }}-tests
          path: build/reports/tests/test/
